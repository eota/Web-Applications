{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ej/Documents/CSE183/Assignment6/src/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer'; // import TableHead from '@material-ui/core/TableHead';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport emails from './data/emails.json'; // const trash = emails.filter((x) => x.trash === true);\n\nconst inbox = emails.filter(x => x.trash === false); // const sortedInbox = inbox.sort(function(a, b) {\n//   return a.received - b.received;\n// });\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300\n  }\n});\n/**\n *\n */\n// function testFunction() {\n//   alert('teast');\n// }\n\n/**\n * Using https://www.tutorialspoint.com/\n * How-to-calculate-the-difference-between-two-dates-in-JavaScript\n *\n * @param {date} emailDate unformatted email date string\n *\n * @return {object} Formatted date string\n */\n\nfunction dateOutput(emailDate) {\n  const d = new Date(emailDate);\n  const today = new Date();\n  const timeDiff = today.getTime() - d.getTime();\n  const daysDiff = timeDiff / (1000 * 3600 * 24);\n  let output = '';\n  const arrMonths = [];\n  arrMonths[0] = 'Jan';\n  arrMonths[1] = 'Feb';\n  arrMonths[2] = 'Mar';\n  arrMonths[3] = 'Apr';\n  arrMonths[4] = 'May';\n  arrMonths[5] = 'June';\n  arrMonths[6] = 'July';\n  arrMonths[7] = 'Aug';\n  arrMonths[8] = 'Sept';\n  arrMonths[9] = 'Oct';\n  arrMonths[10] = 'Nov';\n  arrMonths[11] = 'Dec';\n\n  if (daysDiff < 1) {\n    output = d.getHours() + ':' + d.getMinutes();\n  } else if (daysDiff >= 1 && daysDiff < 365) {\n    output = arrMonths[d.getMonth()] + ' ' + d.getDate();\n  } else if (daysDiff >= 365) {\n    output = d.getFullYear();\n  }\n\n  return output;\n}\n\nBasicTable.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  tableMode: PropTypes.string\n};\n/**\n * Using https://material-ui.com/components/tables/\n *\n * @return {object} a JSX object\n */\n\nexport default function BasicTable({\n  tableMode\n}) {\n  _s();\n\n  const classes = useStyles();\n  var tableContents = inbox;\n\n  if (tableMode == 'Inbox') {\n    tableContents = inbox;\n  } else if (tableMode == 'Trash') {\n    tableContents = trash;\n  } else {}\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: inbox.map(email => /*#__PURE__*/_jsxDEV(TableRow, {\n          onClick: () => console.log('wew'),\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: email.from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: email.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: dateOutput(email.received)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, email.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/ej/Documents/CSE183/Assignment6/src/Table.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableRow","Paper","PropTypes","emails","inbox","filter","x","trash","useStyles","table","minWidth","dateOutput","emailDate","d","Date","today","timeDiff","getTime","daysDiff","output","arrMonths","getHours","getMinutes","getMonth","getDate","getFullYear","BasicTable","propTypes","tableMode","string","classes","tableContents","map","email","console","log","from","subject","received","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport emails from './data/emails.json';\n\n// const trash = emails.filter((x) => x.trash === true);\nconst inbox = emails.filter((x) => x.trash === false);\n// const sortedInbox = inbox.sort(function(a, b) {\n//   return a.received - b.received;\n// });\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n});\n\n/**\n *\n */\n// function testFunction() {\n//   alert('teast');\n// }\n\n/**\n * Using https://www.tutorialspoint.com/\n * How-to-calculate-the-difference-between-two-dates-in-JavaScript\n *\n * @param {date} emailDate unformatted email date string\n *\n * @return {object} Formatted date string\n */\nfunction dateOutput(emailDate) {\n  const d = new Date(emailDate);\n  const today = new Date();\n  const timeDiff = today.getTime() - d.getTime();\n  const daysDiff = timeDiff / (1000 * 3600 * 24);\n  let output = '';\n  const arrMonths = [];\n  arrMonths[0] = 'Jan';\n  arrMonths[1] = 'Feb';\n  arrMonths[2] = 'Mar';\n  arrMonths[3] = 'Apr';\n  arrMonths[4] = 'May';\n  arrMonths[5] = 'June';\n  arrMonths[6] = 'July';\n  arrMonths[7] = 'Aug';\n  arrMonths[8] = 'Sept';\n  arrMonths[9] = 'Oct';\n  arrMonths[10] = 'Nov';\n  arrMonths[11] = 'Dec';\n\n  if (daysDiff < 1) {\n    output = d.getHours() + ':' + d.getMinutes();\n  } else if (daysDiff >= 1 && daysDiff < 365) {\n    output = arrMonths[d.getMonth()] + ' ' + d.getDate();\n  } else if (daysDiff >= 365) {\n    output = d.getFullYear();\n  }\n\n  return output;\n}\n\nBasicTable.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  tableMode: PropTypes.string,\n};\n\n/**\n * Using https://material-ui.com/components/tables/\n *\n * @return {object} a JSX object\n */\nexport default function BasicTable({tableMode}) {\n  const classes = useStyles();\n  var tableContents = inbox;\n  if (tableMode == 'Inbox') {\n    tableContents = inbox;\n  } else if (tableMode == 'Trash') {\n    tableContents = trash;\n  } else {\n\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableBody>\n          {inbox.map((email) => (\n            <TableRow key={email.id} onClick={() => console.log('wew')}>\n              <TableCell align=\"left\">{email.from}</TableCell>\n              <TableCell align=\"left\">{email.subject}</TableCell>\n              <TableCell align=\"left\">{dateOutput(email.received)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}